diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
new file mode 100644
index 0000000..92625a2
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
@@ -0,0 +1,59 @@
+
+/*
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderH
+ */
+
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wreturn-type-c-linkage"
+
+#import <React/RCTComponentViewProtocol.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name);
+#if RCT_NEW_ARCH_ENABLED
+#ifndef RCT_DYNAMIC_FRAMEWORKS
+
+Class<RCTComponentViewProtocol> RNGestureHandlerButtonCls(void) __attribute__((used)); // 0
+Class<RCTComponentViewProtocol> RNGestureHandlerRootViewCls(void) __attribute__((used)); // 0
+
+#if !TARGET_OS_OSX
+Class<RCTComponentViewProtocol> RNCSafeAreaProviderCls(void) __attribute__((used)); // 2
+Class<RCTComponentViewProtocol> RNCSafeAreaViewCls(void) __attribute__((used)); // 2
+#endif
+
+#if !TARGET_OS_OSX
+Class<RCTComponentViewProtocol> RNSFullWindowOverlayCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSModalScreenCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenContainerCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenContentWrapperCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenFooterCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenNavigationContainerCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenStackHeaderConfigCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenStackHeaderSubviewCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSScreenStackCls(void) __attribute__((used)); // 3
+Class<RCTComponentViewProtocol> RNSSearchBarCls(void) __attribute__((used)); // 3
+#endif
+
+#if !TARGET_OS_TV
+Class<RCTComponentViewProtocol> RNCWebViewCls(void) __attribute__((used)); // 4
+#endif
+
+
+#endif
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#pragma GCC diagnostic pop
+
diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
new file mode 100644
index 0000000..4970023
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
@@ -0,0 +1,74 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderCpp
+ */
+
+// OSS-compatibility layer
+
+#import "RCTThirdPartyFabricComponentsProvider.h"
+
+#import <string>
+#import <unordered_map>
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name) {
+  static std::unordered_map<std::string, Class (*)(void)> sFabricComponentsClassMap = {
+    #if RCT_NEW_ARCH_ENABLED
+    #ifndef RCT_DYNAMIC_FRAMEWORKS
+
+    {"RNGestureHandlerButton", RNGestureHandlerButtonCls}, // 0
+
+    {"RNGestureHandlerRootView", RNGestureHandlerRootViewCls}, // 0
+
+#if !TARGET_OS_OSX
+
+    {"RNCSafeAreaProvider", RNCSafeAreaProviderCls}, // 2
+
+    {"RNCSafeAreaView", RNCSafeAreaViewCls}, // 2
+#endif
+
+#if !TARGET_OS_OSX
+
+    {"RNSFullWindowOverlay", RNSFullWindowOverlayCls}, // 3
+
+    {"RNSModalScreen", RNSModalScreenCls}, // 3
+
+    {"RNSScreenContainer", RNSScreenContainerCls}, // 3
+
+    {"RNSScreenContentWrapper", RNSScreenContentWrapperCls}, // 3
+
+    {"RNSScreenFooter", RNSScreenFooterCls}, // 3
+
+    {"RNSScreen", RNSScreenCls}, // 3
+
+    {"RNSScreenNavigationContainer", RNSScreenNavigationContainerCls}, // 3
+
+    {"RNSScreenStackHeaderConfig", RNSScreenStackHeaderConfigCls}, // 3
+
+    {"RNSScreenStackHeaderSubview", RNSScreenStackHeaderSubviewCls}, // 3
+
+    {"RNSScreenStack", RNSScreenStackCls}, // 3
+
+    {"RNSSearchBar", RNSSearchBarCls}, // 3
+#endif
+
+#if !TARGET_OS_TV
+
+    {"RNCWebView", RNCWebViewCls}, // 4
+#endif
+
+    #endif
+    #endif
+  };
+
+  auto p = sFabricComponentsClassMap.find(name);
+  if (p != sFabricComponentsClassMap.end()) {
+    auto classFunc = p->second;
+    return classFunc();
+  }
+  return nil;
+}
diff --git a/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec b/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec
index 6680c60..95d1bb5 100644
--- a/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec
+++ b/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec
@@ -50,7 +50,7 @@ Pod::Spec.new do |spec|
       ss.source_files = "destroot/include/hermes/**/*.h"
       ss.header_mappings_dir = "destroot/include"
       ss.ios.vendored_frameworks = "destroot/Library/Frameworks/universal/hermes.xcframework"
-      ss.visionos.vendored_frameworks = "destroot/Library/Frameworks/universal/hermes.xcframework"
+      # ss.visionos.vendored_frameworks = "destroot/Library/Frameworks/universal/hermes.xcframework"
       ss.osx.vendored_frameworks = "destroot/Library/Frameworks/macosx/hermes.framework"
     end
 
